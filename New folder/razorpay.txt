# views.py

from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework import status
from .models import Cart_Details, Order_M, Order_Details, Offer, Payment_M, Payment_Mode
from .serializers import Order_MSerializer, Order_DetailsSerializer, Payment_MSerializer
from django.utils import timezone
import razorpay

class OrderCreateView(APIView):
    serializer_class = Order_MSerializer

    def post(self, request, *args, **kwargs):
        user = self.request.user

        # ... (existing code for creating the order)

        # Create a new order
        new_order = serializer.save(User_ID=user)

        # Retrieve items from the user's cart
        cart_items = Cart_Details.objects.filter(Cart_ID__User_ID=user)

        # ... (existing code for transferring cart items to order details)

        # Update the total price of the order
        new_order.Total = sum(cart_item.Subtotal for cart_item in cart_items)
        new_order.save()

        # Integrate Razorpay order creation
        razorpay_client = razorpay.Client(auth=('YOUR_RAZORPAY_API_KEY', 'YOUR_RAZORPAY_API_SECRET'))

        try:
            razorpay_order = razorpay_client.order.create({
                'amount': int(new_order.Total * 100),  # Amount in paisa
                'currency': 'INR',
                'payment_capture': 1  # Auto-capture payment
            })

            # Update the Order model with razorpay_order_id
            new_order.RazorpayOrderID = razorpay_order['id']
            new_order.save()

            # Create a payment record associated with the order
            payment_mode = Payment_Mode.objects.get(name='Credit Card')  # Replace with your actual default payment mode
            payment_instance = Payment_M.objects.create(
                Order_ID=new_order,
                PaymentModeID=payment_mode,
                PaymentDate=timezone.now(),
                PaymentTime=timezone.now().time(),
            )

            # Update the Payment_M model with razorpay_order_id
            payment_instance.RazorpayOrderID = razorpay_order['id']
            payment_instance.save()

            # Return a response with the serialized order, order details, payment, and razorpay data
            response_data = {
                'message': 'Order created successfully',
                'order': serializer.data,
                'order_details': Order_DetailsSerializer(order_details, many=True).data,
                'payment': Payment_MSerializer(payment_instance).data,
                'razorpay_order_id': razorpay_order['id']
            }

            # Clear the user's cart
            cart_items.delete()

            return Response(response_data, status=status.HTTP_201_CREATED)

        except razorpay.errors.RazorpayError as e:
            return Response({'error': str(e)}, status=status.HTTP_500_INTERNAL_SERVER_ERROR)
