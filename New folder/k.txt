import React, { useContext, useEffect, useState } from 'react';
import axios from 'axios';
import PopUp from '../PopUp/PopUp';
import { FaWindowClose } from "react-icons/fa";

const CartList = () => {
  const { cartItems } = useContext(MenuContext);
  const [appliedOfferID, setAppliedOfferID] = useState('');
  const [appliedOfferName, setAppliedOfferName] = useState('');
  const [showCloseButton, setShowCloseButton] = useState(false);
  const [offerData, setOfferData] = useState([]);
  const [btnpopup, setBtnPopUp] = useState(false);

  useEffect(() => {
    // Check local storage for applied offer ID
    const storedOfferID = cartItems.Offer_ID;
    if (storedOfferID) {
      setAppliedOfferID(storedOfferID);
      fetchOfferDetails(storedOfferID);
      setShowCloseButton(true);
    }
  }, [cartItems]);

  const fetchOfferDetails = async (offerID) => {
    try {
      const response = await axios.get(`http://127.0.0.1:8000/api/offer/${offerID}`);
      setAppliedOfferName(response.data.OfferTitle);
    } catch (error) {
      console.error('Error fetching offer details:', error);
    }
  };

  const handleOffers = async (offer_id, offerName) => {
    // Apply offer
    setAppliedOfferID(offer_id);
    setAppliedOfferName(offerName);
    setShowCloseButton(true);
    // Additional logic to update cart with offer
  };

  const handleRemoveOffer = () => {
    // Remove offer
    setAppliedOfferID('');
    setAppliedOfferName('');
    setShowCloseButton(false);
    // Additional logic to remove offer from cart
  };

  const fetchOfferData = async () => {
    try {
      const response = await axios.get("http://127.0.0.1:8000/api/offer/");
      setOfferData(response.data);
      setBtnPopUp(true);
    } catch (error) {
      console.error('Error fetching offer data:', error);
    }
  };

  return (
    <div className="cart-container">
      {/* Cart items */}
      {/* Offer display */}
      {appliedOfferName && showCloseButton && (
        <button onClick={handleRemoveOffer}>
          <FaWindowClose size={20} />
        </button>
      )}
      {/* Popup */}
      <PopUp trigger={btnpopup} setTrigger={setBtnPopUp}>
        <h2>Offers</h2>
        <div className="offermain_container">
          {offerData.length > 0 ? (
            offerData.map(offer => (
              <div key={offer.OfferID} className='offer_container'>
                <div className="left">
                  <h3>{offer.OfferTitle}</h3>
                  <p>{offer.OfferDescription}</p>
                  <p>Minimum Amount: {offer.MinimumAmount}</p>
                  <p>Discount Percentage: {offer.DiscountPercentage}</p>
                </div>
                <div className="right">
                  <button onClick={() => handleOffers(offer.OfferID, offer.OfferTitle)}>Apply</button>
                </div>
              </div>
            ))
          ) : (
            <p>Loading offer data...</p>
          )}
        </div>
      </PopUp>
    </div>
  );
};

export default CartList;
